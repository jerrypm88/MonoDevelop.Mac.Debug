// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Globalization;

namespace MonoDevelop.Inspector
{
	public interface IMainWindowWrapper: IWindowWrapper
	{
		InspectorViewMode ViewMode { get; set; }

    }

	public interface IWindowWrapper : INativeObject
    {
		IViewWrapper ContentView { get; set; }
		IViewWrapper FirstResponder { get; }
		bool HasParentWindow { get; }
        void Focus();

        event EventHandler LostFocus;
		event EventHandler ResizeRequested;
		event EventHandler MovedRequested;

		void AddChildWindow (IWindowWrapper borderer);
		void RecalculateKeyViewLoop ();
		bool ContainsChildWindow(IWindowWrapper debugOverlayWindow);

		void AlignLeft(IWindowWrapper toView, int pixels);
		void AlignTop(IWindowWrapper toView, int pixels);
		void AlignRight(IWindowWrapper toView, int pixels);

        float FrameX { get; }
        float FrameY { get; }
        float FrameWidth { get; }
        float FrameHeight { get; }

        void SetTitle(string v);
		void SetContentSize(int toolbarWindowWidth, int toolbarWindowHeight);
		void Close();
        void SetAppareance(bool isDark);
    }
}

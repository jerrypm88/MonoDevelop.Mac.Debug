// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using AppKit;
using CoreGraphics;
using Foundation;

namespace MonoDevelop.Inspector.Mac
{
    internal class MacInspectorContext : InspectorContext
    {
        protected override InspectorManager GetInitializationContext()
        {
            var macDelegate = new MacInspectorDelegate();

            var over = new MacBorderedWindow (CGRect.Empty, NSColor.Green);
            var next = new MacBorderedWindow (CGRect.Empty, NSColor.Red);
            var previous = new MacBorderedWindow (CGRect.Empty, NSColor.Blue);
            var acc = new MacAccessibilityWindow(new CGRect(10, 10, 600, 700));
            var ins = new InspectorWindow(macDelegate, new CGRect(10, 10, 600, 700)); ;
            var tool = new MacToolbarWindow (macDelegate);
            return new InspectorManager(macDelegate, over, next, previous, acc,ins, tool);
        }

        public static MacInspectorContext Current { get; set; } = new MacInspectorContext();
    }

    [Register("DebugWindow")]
	public class MacAccInspectorWindow : MacWindowWrapper, IMainWindowWrapper
	{
		public InspectorViewMode ViewMode { get; set; } = InspectorViewMode.Native;

		public MacAccInspectorWindow () : base ()
		{
            MacInspectorContext.Current.Initialize();
        }

		public override void BecomeMainWindow ()
		{
            MacInspectorContext.Current.Attach (this);
			base.BecomeMainWindow ();
		}

		// Called when created from unmanaged code
		public MacAccInspectorWindow (IntPtr handle) : base (handle)
		{

		}

		public MacAccInspectorWindow (NSCoder coder) : base (coder)
		{
		}

		public MacAccInspectorWindow (CGRect contentRect, NSWindowStyle aStyle, NSBackingStore bufferingType, bool deferCreation) : base (contentRect, aStyle, bufferingType, deferCreation)
		{
		}

		public MacAccInspectorWindow (CGRect contentRect, NSWindowStyle aStyle, NSBackingStore bufferingType, bool deferCreation, NSScreen screen) : base (contentRect, aStyle, bufferingType, deferCreation, screen)
		{
		}

		protected MacAccInspectorWindow (NSObjectFlag t) : base (t)
		{
		}

		public override bool MakeFirstResponder (NSResponder aResponder)
		{
			if (aResponder is NSView view) {
                MacInspectorContext.Current.ChangeFocusedView (new MacViewWrapper (view));
			}
			return base.MakeFirstResponder (aResponder);
		}
	}
}
